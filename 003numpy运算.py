# -*- coding=utf-8 -*-
# Author  : 大白的浅
# Time    : 2019/1/8 11:55
# 描述    : 210773579@qq.com

'''基本运算

  Python中的列表无法直接进行数学运算，一旦将列表转换为数组后，就可以实现各种常
见的数学运算。如：四则运算、比较运算、广播运算。
'''

'''
    在numpy模块中，它允许对数组进行批量操作而无需要任何for循环，这一操作
也叫做向量化。任何两个尺寸相同的数组之间，都可以进行批量操作，不同尺寸的
数组之间的操作，则需要用到广播特性。

    实现四则运算可以使用符号，也可以使用函数，
四则运算的符号是“+、-、*、/”，
对应的模块分别是np.add()、np.subtruct()、np.multiply()和np.devide()。

    必须保证操作数组具有相同的形状。
另外，还有“%、//、**”，也可使用np.fmod()、np.modf()和np.power()
'''
import numpy

arr7 = numpy.array([[1,2,3], [4,5,6], [7,8,9]])
arr8 = numpy.array([[11,12,13], [14,15,16], [17,18,19]])

# print('加法:\n', arr7+arr8)
# print('减法:\n', arr7-arr8)
# print('乘法:\n', arr7*arr8)
# print('除法:\n', arr7/arr8)






'''比较运算

   比较运算主要有六种“>、<、<=、>=、==、!=”用在从数组中查询满足条件的元素，
另一个是根据结果执行的不同的操作。
    numpy.where函数是三元表达式x if condition else y 的向量化版本。它有
三个参数，分别是condition、x、y，可以都是数组，第二个参数和第三个参数并
不需要是数组，它们可以是标量。
'''


#取子集
#取出arr7中大于arr8的所有元素
# print('满足条件的二维数组元素: \n',arr7[arr7 < arr8])

arr1 = numpy.array([1,2,3,4,5,6,7,8,9])
#从arr1中取出大于3的元素
# print('满足条件的一维数组元素: \n',arr1[arr1 > 3])




#判断操作
#将arr7中小于7的元素改成5,其他的不变
# print('二维数组的操作: \n',numpy.where(arr7<7, 5, arr7))

#将arr1中大于7的元素改成5,其他的改0
# print('一维数组的操作: \n',numpy.where(arr1<5,5,0))





'''广播运算

'''




































































































